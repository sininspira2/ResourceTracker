{
  "currentVersion": "4.1.3",
  "releases": [
    {
      "version": "4.1.3",
      "date": "2025-10-24",
      "title": "Resource Tier System and Multi-Select Filtering",
      "type": "minor",
      "changes": [
        {
          "type": "feature",
          "description": "Introduced a 'tier' attribute for resources, allowing for granular classification. Tiers can be managed via the edit modal and include distinct styling on resource detail pages."
        },
        {
          "type": "feature",
          "description": "Upgraded the resource table filtering system to support simultaneous multi-selection for status, category, and the new 'tier' attribute."
        },
        {
          "type": "improvement",
          "description": "Integrated a new 'MultiSelectDropdown' component to enhance the UI and power the new filtering capabilities."
        },
        {
          "type": "info",
          "description": "Database Migration: A migration is *not* necessary for this update unless you see a yellow warning banner above the navigation bar. The required schema changes were included in a previous release (v4.1.0)."
        }
      ]
    },    
    {
      "version": "4.1.2",
      "date": "2025-10-23",
      "title": "CSV Data Import/Export and UI/Validation Enhancements",
      "type": "minor",
      "changes": [
        {
          "type": "feature",
          "description": "Added CSV Import/Export feature for resource data (name, quantities, targets) on the Resources page, available to users with 'canEditTargets' permissions."
        },
        {
          "type": "feature",
          "description": "The import workflow includes a confirmation modal, a preview of changes, and robust file validation (file type and size) on both the client and server."
        },
        {
          "type": "improvement",
          "description": "Adjusted the 'ClientNavigation' component to responsively move the version button below the page title on mobile viewports for a cleaner layout."
        },
        {
          "type": "improvement",
          "description": "Improved accessibility in the import modal by associating the file input with a 'label' for better screen reader support."
        },
        {
          "type": "bugfix",
          "description": "Fixed Jest compatibility issues related to 'node-fetch v3' to stabilize the testing environment."
        },
        {
          "type": "other",
          "description": "Enhanced CI/CD pipeline, added API test coverage, and bumped minor dependencies including '@types/node'."
        }
      ]
    },
    {
      "version": "4.1.1",
      "date": "2025-10-16",
      "title": "Comprehensive Theming System and UI Refactoring",
      "type": "patch",
      "changes": [
        {
          "type": "feature",
          "description": "Implemented a comprehensive, robust theming system using Tailwind CSS custom properties, allowing for easy management of light and dark modes across the application. All major UI components (modals, navigation, tables, dashboards) have been refactored to utilize these new theme variables, ensuring a consistent visual experience."
        },
        {
          "type": "improvement",
          "description": "Refactored CSS color variables to use more semantic and intuitive names (e.g., replacing `--color-background-modal-content` with `--color-tile-background`). Color definitions are now centralized in `app/globals.css` and mapped in `tailwind.config.ts`, simplifying future color adjustments and maintenance."
        },
        {
          "type": "improvement",
          "description": "The theme switching logic was enhanced with a pre-hydration script to prevent visual flickering during initial page loads, providing a smoother user experience."
        },
        {
          "type": "other",
          "description": "Added Prettier and the Tailwind CSS plugin to enforce a consistent code style across the project. The entire codebase has been formatted to adhere to this new setup, reordering Tailwind CSS classes for consistency."
        }
      ]
    },
    {
      "version": "4.1.0",
      "date": "2025-10-10",
      "title": "Vercel Data Cache, Improved Migrations, and API Stability",
      "type": "minor",
      "changes": [
        {
          "type": "feature",
          "description": "The database schema has been updated to include a new `global_settings` table and new `tier` (integer) and `subcategory` (text) columns in the `resources` table. **These columns are to support future features** but allow for more granular classification."
        },
        {
          "type": "feature",
          "description": "The database migration tracking system has been completely overhauled from a manual, tag-based approach to an **improved, hash-based system**. This new system ensures cross-platform consistency, is integrated into build commands, and simplifies the user workflow (using only `npm run db:migrate`)."
        },
        {
          "type": "feature",
          "description": "Implemented Vercel's fetch-based Data Cache for API routes using a public/internal pattern. This drastically improves API response times by refactoring `GET` API routes to leverage the new caching strategy with appropriate revalidation times."
        },
        {
          "type": "improvement",
          "description": "Application protection logic was simplified by replacing the old middleware with a lightweight 'include list'."
        },
        {
          "type": "improvement",
          "description": "Client-side cache-busting headers were removed to allow for correct server-side caching, and the old custom caching implementation was deleted."
        },
        {
          "type": "bugfix",
          "description": "Fixed authentication issues by ensuring 'cookie' and 'authorization' headers are correctly forwarded in internal API calls, resolving persistent 401 errors when using Vercel Authentication."
        },
        {
          "type": "bugfix",
          "description": "Resolved critical build errors related to the Next.js 15 upgrade by updating all dynamic API route handlers to correctly use the new asynchronous `params` object signature."
        },
        {
          "type": "bugfix",
          "description": "Ensured data integrity on resource deletion by updating the `DELETE` handler to also delete associated records from the `resource_history` and `leaderboard` tables. This logic is now wrapped in a database transaction."
        },
        {
          "type": "bugfix",
          "description": "Added robust input validation to the leaderboard API route, including an allowlist for `timeFilter` and fallbacks for `limit`, `page`, and `pageSize` to prevent `NaN` errors from invalid user input."
        },
        {
          "type": "improvement",
          "description": "Refactored the codebase to use modern JavaScript features (ES2022), including optional chaining and nullish coalescing. This improves code clarity, safety, and maintainability by simplifying property access and providing safer default values for variables."
        }
      ]
    },
    {
      "version": "4.0.7",
      "date": "2025-10-07",
      "title": "Dynamic Update Thresholds, Testing, and Dependency Upgrades",
      "type": "minor",
      "changes": [
        {
          "type": "feature",
          "description": "Implemented dynamic 'needs updating' logic using different time thresholds for resources: Non-priority items are flagged after 7 days of inactivity, while Priority items retain the original 24-hour threshold. This involved removing the unused `isResourceStale` function and `STALE_THRESHOLD_MS` constant, and updating the UI to use the new logic for styling and dynamic tooltips."
        },
        {
          "type": "improvement",
          "description": "Enhanced the 'What's New' modal with a new 'Bug' icon (from lucide-react) that links directly to the project's GitHub issues page with a 'Report a Bug' tooltip. The tooltip for the existing GitHub icon was also updated to 'Visit project Github'."
        },
        {
          "type": "improvement",
          "description": "Overhauled the `README.md` and other documentation for better clarity and completeness."
        },
        {
          "type": "improvement",
          "description": "Significantly improved development tooling by adding test coverage for core libraries and configuring SWC for use with Jest to enhance testing speed and setup."
        },
        {
          "type": "other",
          "description": "Upgraded core development dependencies, including ESLint and `eslint-config-next`, to v9. This resolves several npm warnings related to deprecated packages."
        }
      ]
    },
    {
      "version": "4.0.6",
      "date": "2025-10-02",
      "title": "Admin Override, Framework Upgrades, and Fixes",
      "type": "minor",
      "changes": [
        {
          "type": "feature",
          "description": "Administrators can now update resource quantities on behalf of other users via a new dropdown in the 'Add/Remove' modal. The backend API (`PUT /api/resources/[id]`) was updated to accept an `onBehalfOf` parameter, and an audit note is automatically appended to the reason when this feature is used."
        },
        {
          "type": "improvement",
          "description": "The application core frameworks have been upgraded to React 19.2.0 and Next.js 15.1.1. This includes updating dynamic API route handlers to correctly process asynchronous parameters and removing the now-redundant `@types/react` and `@types/react-dom` packages."
        },
        {
          "type": "bugfix",
          "description": "Fixed a bug where the congratulations popup was not appearing after a resource update. The `handleUpdate` function in `ResourceTable.tsx` now correctly uses the `pointsEarned` from the API response to trigger the popup."
        }
      ]
    },
    {
      "version": "4.0.5",
      "date": "2025-09-29",
      "title": "Notes Feature, Modal Sizing, and Backdrop Fix",
      "type": "minor",
      "changes": [
        {
          "type": "feature",
          "description": "An optional 'Notes' textarea has been added to the 'Add/Remove' and 'Set Qty' modals, allowing users to provide a reason (up to 250 characters) for quantity changes. This input is saved to the `reason` column in the `resource_history` table, and the resource history display has been updated to ensure the text wraps and is fully visible."
        },
        {
          "type": "improvement",
          "description": "The width of `UpdateQuantityModal`, `ChangeTargetModal`, `TransferModal`, `EditResourceModal`, and `CongratulationsPopup` has been increased on desktop and larger screens to improve usability."
        },
        {
          "type": "bugfix",
          "description": "Fixed an issue where a modal could unintentionally close if a user clicked down on the modal content and released the click on the backdrop. This was resolved by replacing the `onClick` handler on modal backdrops with `onMouseDown`."
        },
        {
          "type": "other",
          "description": "Bumped drizzle-kit from 0.31.4 to 0.31.5."
        }
      ]
    },
    {
      "version": "4.0.3",
      "date": "2025-09-22",
      "title": "Enter Key Modal Submission",
      "type": "patch",
      "changes": [
        {
          "type": "feature",
          "description": "Added the ability to submit the edit, set quantity, set target, and transfer modals by pressing the Enter key in the text input fields."
        }
      ]
    },
    {
      "version": "4.0.2",
      "date": "2025-09-03",
      "title": "Modal Overhaul, Accessibility Improvements, and Bug Fixes",
      "type": "patch",
      "changes": [
        {
          "type": "feature",
          "description": "The 'What's New' modal has been overhauled to handle long content gracefully. It now uses a flexbox layout to ensure the header and footer are always visible, and the content area is scrollable. Long content is initially collapsed with a 'See More' button to expand it. This also includes smooth expand/collapse animations and fixes for a visual flash on initial render. The modal also now correctly dismisses permanently when closed via the 'X' button or backdrop."
        },
        {
          "type": "feature",
          "description": "Replaced the hardcoded SVGs in the delete confirmation modal with `AlertTriangle` and `Trash2` icons from the `lucide-react` library. This ensures consistent icon usage across the application, including the `ResourceTable` component and the resource detail page."
        },
        {
          "type": "improvement",
          "description": "Improved the accessibility and user experience of all modals by adding `role=\"dialog\"`, `aria-modal=\"true\"`, and `aria-labelledby` attributes for better screen reader support. Modals can now be closed by clicking the overlay without closing when clicking the content itself."
        },
        {
          "type": "improvement",
          "description": "Refactored the activity chart colors on the resource detail page from hardcoded hex strings to a reusable `CHART_COLORS` constant object, which improves maintainability."
        },
        {
          "type": "bugfix",
          "description": "Fixed an issue where the legend circles on the activity timeline would get squished on narrower viewports by adding the `flex-shrink-0` utility class."
        },
        {
          "type": "bugfix",
          "description": "Ensured the progress bar is always visible on the resource detail page when a target is set, even if the progress is 0%, by correcting a conditional render check."
        }
      ]
    },
    {
      "version": "4.0.0",
      "date": "2025-09-02",
      "title": "Priority Resource Flag Addition",
      "type": "major",
      "changes": [
        {
          "type": "feature",
          "description": "Added a new 'isPriority' boolean flag for resources. This includes adding an 'isPriority' column to the database schema, updating the EditResourceModal with a checkbox, adding a visual indicator (asterisk) for priority resources, and implementing a filter to show only priority resources. The API has also been updated to handle this new field."
        },
        {
          "type": "info",
          "description": "If you upgraded from 3.x to 4.x, please refer to the DB_MIGRATION.md file on the ResourceTracker Github."
        }
      ]
    },
    {
      "version": "3.2.7",
      "date": "2025-09-01",
      "title": "Mobile View Navigation Bar Fixes",
      "type": "minor",
      "changes": [
        {
          "type": "bugfix",
          "description": "Fixed long organization names in the `ClientNavigation` component overflowing their container in mobile view."
        },
        {
          "type": "bugfix",
          "description": "Fixed 'Back to Dashboard' links on the activity and privacy pages to be more mobile-friendly."
        },
        {
          "type": "enhancement",
          "description": "Added lucide-react dependency. Necessary for above fixes, and enables access to a lightweight open-source vector graphic library for later updates."
        }
      ]
    },
    {
      "version": "3.2.6",
      "date": "2025-08-31",
      "title": "Full Action Controls, UI/UX Improvements, and Bug Fixes on Resource Details Page",
      "type": "minor",
      "changes": [
        {
          "type": "feature",
          "description": "The Resource Details page is now equipped with the complete set of action buttons previously only available on the main resource table. Users can now directly 'Add/Remove', 'Set Quantity', 'Transfer', 'Set Target', 'Edit', and 'Delete' resources from the details view, respecting all existing user permissions."
        },
        {
          "type": "improvement",
          "description": "The new action buttons on the details page feature a fully responsive layout. They are neatly arranged in a grid that works on both desktop and mobile, ensuring a great user experience on any device."
        },
        {
          "type": "improvement",
          "description": "The action buttons now maintain a uniform height and width, even on mobile devices where text wrapping might occur, providing a cleaner and more professional look."
        },
        {
          "type": "improvement",
          "description": "To optimize for smaller screens, the icons inside the action buttons on the Resource Details page are now hidden on mobile view, providing more space for the text labels."
        },
        {
          "type": "improvement",
          "description": "Long text and URLs in the resource description field will now correctly wrap to the next line, preventing horizontal overflow and improving readability on mobile devices."
        },
        {
          "type": "improvement",
          "description": "The 'Resource Details' title is now centered on the page, particularly in desktop view."
        },
        {
          "type": "bugfix",
          "description": "Corrected a permission issue on the Resource Details page where the 'Transfer' button was only visible to administrators. It is now correctly shown to all users with editing permissions, matching the behavior of the main resource table."
        },
        {
          "type": "bugfix",
          "description": "Fixed several modal-related prop and handler bugs on the resource details page, including a JSON parsing error, incorrect prop names, and an extra `session` prop."
        }
      ]
    },
    {
      "version": "3.2.5",
      "date": "2025-08-28",
      "title": "Improved Activity Chart and Bug Fixes",
      "type": "minor",
      "changes": [
        {
          "type": "feature",
          "description": "The activity timeline chart on the resource detail page now displays three separate lines for Hagga, Deep Desert, and the total quantity. The chart's y-axis scaling is updated to accommodate all three data series, and a legend has been added. The y-axis now also displays four dynamically calculated labels."
        },
        {
          "type": "bugfix",
          "description": "Corrected an issue where the 'Target' column was not visible for users who lack edit target permissions."
        }
      ]
    },
    {
      "version": "3.2.4",
      "date": "2025-08-27",
      "title": "Improved Target Quantity Editing and User Data Export",
      "type": "minor",
      "changes": [
        {
          "type": "feature",
          "description": "Replaced inline text input for editing a resource's target quantity with a new modal-based approach. The ResourceTable component now displays the target quantity as plain text in the table view. A new 'Set Target' button has been added next to the 'Transfer' button in both grid and table views for users with target editing permissions. Clicking this button opens a new ChangeTargetModal for inputting a new target quantity."
        },
        {
          "type": "feature",
          "description": "Added the ability for users with hasUserManagementAccess to export data for any user. A new API route app/api/users/[userId]/data-export/route.ts was added, and the UserTable component now includes an 'Export Data' button on each row for authorized users. The button triggers a download of the user's data as a JSON file."
        },
        {
          "type": "improvement",
          "description": "The 'Set' button for quantity is now labeled 'Set Qty'."
        },
        {
          "type": "improvement",
          "description": "The 'Set Target' button is now styled with an orange color."
        },
        {
          "type": "improvement",
          "description": "In the table view, the 'Resource' column is narrower with text wrapping, and the 'Actions' column is wider."
        },
        {
          "type": "improvement",
          "description": "The table layout is set to table-fixed to ensure column widths are respected."
        },
        {
          "type": "improvement",
          "description": "Action buttons in the table view have a min-w-20 to ensure they have a sensible minimum width."
        },
        {
          "type": "improvement",
          "description": "Bumped @libsql/client from 0.15.12 to 0.15.14, @types/node from 22.17.2 to 22.18.0, and drizzle-orm from 0.44.4 to 0.44.5."
        },
        {
          "type": "bugfix",
          "description": "Corrected missing useEffect dependencies in react."
        }
      ]
    },
    {
      "version": "3.2.2",
      "date": "2025-08-21",
      "title": "Improve UpdateQuantityModal functionality",
      "type": "minor",
      "changes": [
        {
          "type": "improvement",
          "description": "Replaced the 'Update' button in UpdateQuantityModal with distinct 'Add' and 'Remove' buttons for relative updates."
        },
        {
          "type": "improvement",
          "description": "The UpdateQuantityModal input field now prevents negative values, ensuring data integrity."
        }
      ]
    },
    {
      "version": "3.2.1",
      "date": "2025-08-21",
      "title": "User Management Page Added",
      "type": "minor",
      "changes": [
        {
          "type": "feature",
          "description": "Added a \"User Management\" page for users with canManageUsers permission set to True in environment variables."
        },
        {
          "type": "improvement",
          "description": "Moved from Node.js 20.x (Maintenence LTS) to 22.x (Active LTS)."
        },
        {
          "type": "improvement",
          "description": "Bumped some minor package dependency versions and changed package.json and package-lock.json to better reflect application dependencies and dev dependencies."
        },
        {
          "type": "improvement",
          "description": "Minor aesthetic change to Dashboard SVG icons."
        }
      ]
    },
    {
      "version": "3.1.0",
      "date": "2025-08-19",
      "title": "Database Performance and New Features",
      "type": "minor",
      "changes": [
        {
          "type": "feature",
          "description": "Added a category filter to the resource table."
        },
        {
          "type": "feature",
          "description": "Added a \"Blueprints\" category for organizing resources."
        },
        {
          "type": "improvement",
          "description": "Text added to the \"Description\" field of a resource is now parsed and automatically linkifieid with anchor tags."
        },
        {
          "type": "improvement",
          "description": "Optimized database performance with atomic transactions for resource updates and faster leaderboard queries."
        },
        {
          "type": "improvement",
          "description": "Lazy-loaded the database connection to speed up initial application response."
        },
        {
          "type": "improvement",
          "description": "Refactored internal code by centralizing constants for better maintainability."
        },
        {
          "type": "bugfix",
          "description": "Corrected an issue where permissions were not being properly checked on the server side."
        },
        {
          "type": "bugfix",
          "description": "Resolved warnings related to Discord role configuration parsing."
        },
        {
          "type": "bugfix",
          "description": "Addressed minor issues in the new inventory transfer modal."
        }
      ]
    },
    {
      "version": "3.0.0",
      "date": "2025-08-11",
      "title": "Dual-inventory tracking addition",
      "type": "major",
      "changes": [
        {
          "type": "feature",
          "description": "Added dual-tracking for DD and Hagga Bases"
        },
        {
          "type": "bugfix",
          "description": "Fixed bulk metadata update"
        }
      ]
    }
  ]
}
